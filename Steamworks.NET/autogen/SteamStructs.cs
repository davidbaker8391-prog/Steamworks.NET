// This file is automatically generated!

using System;
using System.Runtime.InteropServices;

namespace Steamworks {
	[StructLayout(LayoutKind.Sequential, Pack = Packsize.value)]
	public struct FriendGameInfo_t {
		public GameID_t m_gameID;
		public uint m_unGameIP;
		public ushort m_usGamePort;
		public ushort m_usQueryPort;
		public ulong m_steamIDLobby;
	}

	public struct FriendSessionStateInfo_t {
		public uint m_uiOnlineSessionInstances;
		public byte m_uiPublishedToFriendsSessionInstance;
	}

	[StructLayout(LayoutKind.Sequential, Pack = Packsize.value)]
	public struct P2PSessionState_t {
		public byte m_bConnectionActive;
		public byte m_bConnecting;
		public byte m_eP2PSessionError;
		public byte m_bUsingRelay;
		public int m_nBytesQueuedForSend;
		public int m_nPacketsQueuedForSend;
		public uint m_nRemoteIP;
		public ushort m_nRemotePort;
	}

	[StructLayout(LayoutKind.Sequential, Pack = Packsize.value)]
	public struct SteamParamStringArray_t {
		public string m_ppStrings;
		public int m_nNumStrings;
	}

	[StructLayout(LayoutKind.Sequential, Pack = Packsize.value)]
	public struct SteamUGCDetails_t {
		public ulong m_nPublishedFileId;
		public EResult m_eResult;
		public EWorkshopFileType m_eFileType;
		public uint m_nCreatorAppID;
		public uint m_nConsumerAppID;
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = Constants.k_cchPublishedDocumentTitleMax)]
		public string m_rgchTitle;
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = Constants.k_cchPublishedDocumentDescriptionMax)]
		public string m_rgchDescription;
		public ulong m_ulSteamIDOwner;
		public uint m_rtimeCreated;
		public uint m_rtimeUpdated;
		public uint m_rtimeAddedToUserList;
		public ERemoteStoragePublishedFileVisibility m_eVisibility;
		public bool m_bBanned;
		public bool m_bAcceptedForUse;
		public bool m_bTagsTruncated;
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = Constants.k_cchTagListMax)]
		public string m_rgchTags;
		public ulong m_hFile;
		public ulong m_hPreviewFile;
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = Constants.k_cchFilenameMax)]
		public string m_pchFileName;
		public int m_nFileSize;
		public int m_nPreviewFileSize;
		[MarshalAs(UnmanagedType.ByValTStr, SizeConst = Constants.k_cchPublishedFileURLMax)]
		public string m_rgchURL;
		public uint m_unVotesUp;
		public uint m_unVotesDown;
		public float m_flScore;
	}

	[StructLayout(LayoutKind.Sequential, Pack = Packsize.value)]
	public struct CallbackMsg_t {
		public int m_hSteamUser;
		public int m_iCallback;
		public IntPtr m_pubParam;
		public int m_cubParam;
	}

	[StructLayout(LayoutKind.Sequential, Pack = Packsize.value)]
	public struct LeaderboardEntry_t {
		public ulong m_steamIDUser;
		public int m_nGlobalRank;
		public int m_nScore;
		public int m_cDetails;
		public ulong m_hUGC;
	}

	public struct MatchMakingKeyValuePair_t {
	}

}
